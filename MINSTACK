#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

#define MAX_SIZE 100

typedef struct {
    int data[MAX_SIZE];
    int min[MAX_SIZE];
    int top;
} MinStack;

void initializeStack(MinStack* stack) {
    stack->top = -1;
}

int isFull(MinStack* stack) {
    return stack->top == MAX_SIZE - 1;
}

int isEmpty(MinStack* stack) {
    return stack->top == -1;
}

void push(MinStack* stack, int value) {
    if (isFull(stack)) {
        printf("Stack Overflow!\n");
        return;
    }

    stack->top++;
    stack->data[stack->top] = value;

    if (stack->top == 0) {
        stack->min[stack->top] = value;
    } else {
        stack->min[stack->top] = value < stack->min[stack->top - 1] ? value : stack->min[stack->top - 1];
    }

    printf("Pushed %d onto the stack.\n", value);
}

void pop(MinStack* stack) {
    if (isEmpty(stack)) {
        printf("Stack Underflow!\n");
        return;
    }

    int poppedValue = stack->data[stack->top];
    stack->top--;
    printf("Popped %d from the stack.\n", poppedValue);
}

void top(MinStack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty!\n");
        return;
    }

    printf("Top element is %d.\n", stack->data[stack->top]);
}

void getMin(MinStack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty!\n");
        return;
    }

    printf("Minimum element is %d.\n", stack->min[stack->top]);
}

void display(MinStack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty!\n");
        return;
    }

    printf("Stack elements: ");
    for (int i = 0; i <= stack->top; i++) {
        printf("%d ", stack->data[i]);
    }
    printf("\n");
}

int main() {
    MinStack stack;
    initializeStack(&stack);

    int choice, value;

    printf("\nMINSTACK Implementation\n");
    printf("1. Push\n");
    printf("2. Pop\n");
    printf("3. Top\n");
    printf("4. Get Minimum\n");
    printf("5. Display\n");
    printf("6. Exit\n");

    while (1) {
        printf("\nEnter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to push: ");
                scanf("%d", &value);
                push(&stack, value);
                break;
            case 2:
                pop(&stack);
                break;
            case 3:
                top(&stack);
                break;
            case 4:
                getMin(&stack);
                break;
            case 5:
                display(&stack);
                break;
            case 6:
                printf("Exiting...\n");
                exit(0);
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }

    return 0;
}
