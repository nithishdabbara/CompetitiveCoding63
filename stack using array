#include <stdio.h>
#include <stdlib.h>
#define MAX 10
struct Stack {
    int top;
    int items[MAX];
};
void initStack(struct Stack* s) {
    s->top = -1; 
}

int isFull(struct Stack* s) {
    return s->top == MAX - 1;
}

int isEmpty(struct Stack* s) {
    return s->top == -1;
}
void push(struct Stack* s, int item) {
    if (isFull(s)) {
        printf("Stack Overflow! Cannot push %d\n", item);
    } else {
        s->items[++(s->top)] = item;
        printf("Pushed %d to stack\n", item);
    }
}

int pop(struct Stack* s) {
    if (isEmpty(s)) {
        printf("Stack Underflow! Cannot pop from empty stack\n");
        return -1; 
    } else {
        return s->items[(s->top)--];
    }
}

void display(struct Stack* s) {
    if (isEmpty(s)) {
        printf("Stack is empty\n");
    } else {
        printf("Stack elements: ");
        for (int i = s->top; i >= 0; i--) {
            printf("%d ", s->items[i]);
        }
        printf("\n");
    }
}

int main() {
    struct Stack s;
    initStack(&s);

    push(&s, 10);
    push(&s, 20);
    push(&s, 30);
    display(&s);

    printf("Popped: %d\n", pop(&s));
    display(&s);

    push(&s, 40);
    display(&s);

    return 0;
}
